{"version":3,"file":"static/js/470.e413fc57.chunk.js","mappings":"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","sources":["Components/Cast/Cast.jsx","Components/Components/Components.styled.jsx","Services-API/Api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchAboutMovie } from '../../Services-API/Api';\r\nimport { FilmListStyled, FilmText } from '../Components/';\r\n\r\nexport default function Cast() {\r\n  const [actors, setActors] = useState([]);\r\n  const { moviesId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      await fetchAboutMovie(moviesId, 'credits').then(data =>\r\n        setActors(data.cast)\r\n      );\r\n    };\r\n    fetch();\r\n  }, [moviesId]);\r\n\r\n  return (\r\n    <>\r\n      <FilmListStyled>\r\n        {actors &&\r\n          actors.map(({ character, name, profile_path, id }) => (\r\n            <li key={id}>\r\n              {profile_path ? (\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w300${profile_path}`}\r\n                  alt=\"\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={`https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-`}\r\n                  alt=\"\"\r\n                  width=\"300px\"\r\n                />\r\n              )}\r\n              <FilmText>{character}</FilmText>\r\n              <FilmText>{name}</FilmText>\r\n            </li>\r\n          ))}\r\n      </FilmListStyled>\r\n    </>\r\n  );\r\n}\r\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst MainTitle = styled.h1`\n  text-align: center;\n  font-size: 28px;\n  margin-bottom: 20px;\n`;\n\nconst FilmListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n`;\nconst LinkStyled = styled(Link)`\n  color: black;\n  text-decoration: none;\n`;\n\nconst FilmItem = styled.li`\n  height: 300px;\n  margin-bottom: 15px;\n  width: 350px;\n  transform: scale(1);\n  transition: transform 250ms linear;\n  text-align: center;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n\n  :hover,\n  :focus {\n    transform: scale(1.03);\n  }\n`;\nconst FilmText = styled.p`\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nconst FilmImages = styled.img`\n  margin-right: auto;\n  margin-left: auto;\n  width: 300px;\n  height: 169px;\n`;\n\nconst Form = styled.form`\n  text-align: center;\n  margin-top: 15px;\n  margin-bottom: 20px;\n`;\n\nconst FormInput = styled.input`\n  padding: 5px 20px;\n  border-radius: 5px;\n  margin-right: 20px;\n`;\n\nconst Button = styled.button`\n  padding: 7px 20px;\n  border-radius: 5px;\n  border: none;\n  background-color: #fff;\n`;\n\nexport {\n  FilmListStyled,\n  FilmItem,\n  FilmText,\n  FilmImages,\n  Form,\n  FormInput,\n  Button,\n  MainTitle,\n  LinkStyled,\n};\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst KEY = 'c031fb300fb5fade2c7c769ccf51c6f2';\n\nexport const fetchMain = async () => {\n  const URL = '3/trending/all/day?api_key=';\n  const response = await axios.get(`${URL}${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchSearchFilm = async search => {\n  const URL = '3/search/movie?language=en-US&include_adult=false&api_key=';\n  const response = await axios.get(`${URL}${KEY}&query=${search}`);\n  return response.data;\n};\n\nfetchSearchFilm.propTypes = {\n  search: PropTypes.string.isRequired,\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `3/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\nfetchMovieDetails.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nexport const fetchAboutMovie = async (id, about) => {\n  const response = await axios.get(\n    `3/movie/${id}/${about}?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nfetchAboutMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  about: PropTypes.string.isRequired,\n};\n"],"names":["Cast","_useState","useState","_useState2","_slicedToArray","actors","setActors","moviesId","useParams","useEffect","fetch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","fetchAboutMovie","then","data","cast","stop","apply","arguments","_jsx","_Fragment","children","FilmListStyled","map","_ref2","character","name","profile_path","id","_jsxs","src","concat","alt","width","FilmText","MainTitle","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","LinkStyled","Link","_templateObject3","FilmItem","_templateObject4","_templateObject5","FilmImages","_templateObject6","Form","_templateObject7","FormInput","_templateObject8","Button","_templateObject9","axios","KEY","fetchMain","response","sent","abrupt","fetchSearchFilm","_callee2","search","_context2","_x","propTypes","PropTypes","fetchMovieDetails","_ref3","_callee3","_context3","_x2","_ref4","_callee4","about","_context4","_x3","_x4"],"sourceRoot":""}