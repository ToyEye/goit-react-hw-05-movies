{"version":3,"file":"static/js/795.28917295.chunk.js","mappings":"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","sources":["Components/Components/Components.styled.jsx","Components/FilmList/FilmList.jsx","Pages/HomePage/HomePage.jsx","Services-API/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst MainTitle = styled.h1`\n  text-align: center;\n  font-size: 28px;\n  margin-bottom: 20px;\n`;\n\nconst FilmListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n`;\nconst LinkStyled = styled(Link)`\n  color: black;\n  text-decoration: none;\n`;\n\nconst FilmItem = styled.li`\n  height: 300px;\n  margin-bottom: 15px;\n  width: 350px;\n  transform: scale(1);\n  transition: transform 250ms linear;\n  text-align: center;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n\n  :hover,\n  :focus {\n    transform: scale(1.03);\n  }\n`;\nconst FilmText = styled.p`\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nconst FilmImages = styled.img`\n  margin-right: auto;\n  margin-left: auto;\n  width: 300px;\n  height: 169px;\n`;\n\nconst Form = styled.form`\n  text-align: center;\n  margin-top: 15px;\n  margin-bottom: 20px;\n`;\n\nconst FormInput = styled.input`\n  padding: 5px 20px;\n  border-radius: 5px;\n  margin-right: 20px;\n`;\n\nconst Button = styled.button`\n  padding: 7px 20px;\n  border-radius: 5px;\n  border: none;\n  background-color: #fff;\n`;\n\nexport {\n  FilmListStyled,\n  FilmItem,\n  FilmText,\n  FilmImages,\n  Form,\n  FormInput,\n  Button,\n  MainTitle,\n  LinkStyled,\n};\n","import { useLocation } from 'react-router-dom';\n\nimport {\n  FilmListStyled,\n  FilmItem,\n  FilmText,\n  FilmImages,\n  LinkStyled,\n} from '../../Components/Components/';\n\nconst FilmList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <FilmListStyled>\n      {films.map(\n        ({ id, title, name, backdrop_path, vote_count, vote_average }) => (\n          <FilmItem key={id}>\n            <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n              <FilmText>{title ? title : name}</FilmText>\n\n              <FilmImages\n                src={\n                  backdrop_path\n                    ? `https://image.tmdb.org/t/p/w300${backdrop_path}`\n                    : `https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-`\n                }\n                alt=\"\"\n              />\n\n              <FilmText>Vote: {vote_count}</FilmText>\n              <FilmText>Average rating: {vote_average}</FilmText>\n            </LinkStyled>\n          </FilmItem>\n        )\n      )}\n    </FilmListStyled>\n  );\n};\n\nexport default FilmList;\n","import { useState, useEffect } from 'react';\nimport { fetchMain } from '../../Services-API';\n\nimport FilmList from '../../Components/FilmList/FilmList';\n\nimport { FilmListStyled, MainTitle } from '../../Components/Components/';\n\nexport default function HomePage() {\n  const [films, setFilms] = useState([]);\n\n  useEffect(() => {\n    const paintList = async () => {\n      await fetchMain().then(data => setFilms(data.results));\n    };\n    paintList();\n  }, []);\n\n  return (\n    <article>\n      <MainTitle>Trending today</MainTitle>\n      <FilmListStyled>\n        <FilmList films={films} />\n      </FilmListStyled>\n    </article>\n  );\n}\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst KEY = 'c031fb300fb5fade2c7c769ccf51c6f2';\n\nexport const fetchMain = async () => {\n  const URL = '3/trending/all/day?api_key=';\n  const response = await axios.get(`${URL}${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchSearchFilm = async search => {\n  const URL = '3/search/movie?language=en-US&include_adult=false&api_key=';\n  const response = await axios.get(`${URL}${KEY}&query=${search}`);\n  return response.data;\n};\n\nfetchSearchFilm.propTypes = {\n  search: PropTypes.string.isRequired,\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `3/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\nfetchMovieDetails.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nexport const fetchAboutMovie = async (id, about) => {\n  const response = await axios.get(\n    `3/movie/${id}/${about}?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nfetchAboutMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  about: PropTypes.string.isRequired,\n};\n"],"names":["MainTitle","styled","_templateObject","_taggedTemplateLiteral","FilmListStyled","_templateObject2","LinkStyled","Link","_templateObject3","FilmItem","_templateObject4","FilmText","_templateObject5","FilmImages","_templateObject6","Form","_templateObject7","FormInput","_templateObject8","Button","_templateObject9","_ref","films","location","useLocation","_jsx","children","map","_ref2","id","title","name","backdrop_path","vote_count","vote_average","_jsxs","to","concat","state","from","src","alt","HomePage","_useState","useState","_useState2","_slicedToArray","setFilms","useEffect","paintList","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","fetchMain","then","data","results","stop","apply","arguments","FilmList","axios","KEY","response","sent","abrupt","fetchSearchFilm","_callee2","search","_context2","_x","propTypes","PropTypes","fetchMovieDetails","_ref3","_callee3","_context3","_x2","fetchAboutMovie","_ref4","_callee4","about","_context4","_x3","_x4"],"sourceRoot":""}