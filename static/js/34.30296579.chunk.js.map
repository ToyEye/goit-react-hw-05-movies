{"version":3,"file":"static/js/34.30296579.chunk.js","mappings":"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","sources":["Components/Components/Components.styled.jsx","Components/FilmList/FilmList.jsx","Pages/MoviePage/MoviesPage.jsx","Services-API/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst MainTitle = styled.h1`\n  text-align: center;\n  font-size: 28px;\n  margin-bottom: 20px;\n`;\n\nconst FilmListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n`;\nconst LinkStyled = styled(Link)`\n  color: black;\n  text-decoration: none;\n`;\n\nconst FilmItem = styled.li`\n  height: 300px;\n  margin-bottom: 15px;\n  width: 350px;\n  transform: scale(1);\n  transition: transform 250ms linear;\n  text-align: center;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n\n  :hover,\n  :focus {\n    transform: scale(1.03);\n  }\n`;\nconst FilmText = styled.p`\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nconst FilmImages = styled.img`\n  margin-right: auto;\n  margin-left: auto;\n  width: 300px;\n  height: 169px;\n`;\n\nconst Form = styled.form`\n  text-align: center;\n  margin-top: 15px;\n  margin-bottom: 20px;\n`;\n\nconst FormInput = styled.input`\n  padding: 5px 20px;\n  border-radius: 5px;\n  margin-right: 20px;\n`;\n\nconst Button = styled.button`\n  padding: 7px 20px;\n  border-radius: 5px;\n  border: none;\n  background-color: #fff;\n`;\n\nexport {\n  FilmListStyled,\n  FilmItem,\n  FilmText,\n  FilmImages,\n  Form,\n  FormInput,\n  Button,\n  MainTitle,\n  LinkStyled,\n};\n","import { useLocation } from 'react-router-dom';\n\nimport {\n  FilmListStyled,\n  FilmItem,\n  FilmText,\n  FilmImages,\n  LinkStyled,\n} from '../../Components/Components/';\n\nconst FilmList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <FilmListStyled>\n      {films.map(\n        ({ id, title, name, backdrop_path, vote_count, vote_average }) => (\n          <FilmItem key={id}>\n            <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n              <FilmText>{title ? title : name}</FilmText>\n\n              <FilmImages\n                src={\n                  backdrop_path\n                    ? `https://image.tmdb.org/t/p/w300${backdrop_path}`\n                    : `https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-`\n                }\n                alt=\"\"\n              />\n\n              <FilmText>Vote: {vote_count}</FilmText>\n              <FilmText>Average rating: {vote_average}</FilmText>\n            </LinkStyled>\n          </FilmItem>\n        )\n      )}\n    </FilmListStyled>\n  );\n};\n\nexport default FilmList;\n","import { useState, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { fetchSearchFilm } from '../../Services-API';\nimport { Form, FormInput, Button } from '../../Components/Components';\nimport FilmList from '../../Components/FilmList/FilmList';\n\nexport default function MoviesPage() {\n  const [search, setSearch] = useState('');\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [searchParam, setSearchParam] = useState('');\n\n  useEffect(() => {\n    const searchFilm = async () => {\n      try {\n        const data = await fetchSearchFilm(searchParam);\n        setSearchFilms(data.results);\n      } catch (error) {\n        console.log(error);\n        setSearchFilms([]);\n      }\n    };\n\n    if (searchParam) {\n      searchFilm();\n    }\n\n    return () => {\n      setSearchFilms([]);\n    };\n  }, [searchParam]);\n\n  const handleSearch = evt => {\n    setSearch(evt.target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (search.trim() !== '') {\n      setSearchParam(search);\n    }\n\n    setSearch('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <FormInput onChange={handleSearch} value={search} />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      <Outlet />\n      <FilmList films={searchFilms} />\n    </>\n  );\n}\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst KEY = 'c031fb300fb5fade2c7c769ccf51c6f2';\n\nexport const fetchMain = async () => {\n  const URL = '3/trending/all/day?api_key=';\n  const response = await axios.get(`${URL}${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchSearchFilm = async search => {\n  const URL = '3/search/movie?language=en-US&include_adult=false&api_key=';\n  const response = await axios.get(`${URL}${KEY}&query=${search}`);\n  return response.data;\n};\n\nfetchSearchFilm.propTypes = {\n  search: PropTypes.string.isRequired,\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `3/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\nfetchMovieDetails.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nexport const fetchAboutMovie = async (id, about) => {\n  const response = await axios.get(\n    `3/movie/${id}/${about}?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nfetchAboutMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  about: PropTypes.string.isRequired,\n};\n"],"names":["MainTitle","styled","_templateObject","_taggedTemplateLiteral","FilmListStyled","_templateObject2","LinkStyled","Link","_templateObject3","FilmItem","_templateObject4","FilmText","_templateObject5","FilmImages","_templateObject6","Form","_templateObject7","FormInput","_templateObject8","Button","_templateObject9","_ref","films","location","useLocation","_jsx","children","map","_ref2","id","title","name","backdrop_path","vote_count","vote_average","_jsxs","to","concat","state","from","src","alt","MoviesPage","_useState","useState","_useState2","_slicedToArray","search","setSearch","_useState3","_useState4","searchFilms","setSearchFilms","_useState5","_useState6","searchParam","setSearchParam","useEffect","searchFilm","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchSearchFilm","sent","results","t0","console","log","stop","apply","arguments","_Fragment","onSubmit","evt","preventDefault","trim","onChange","target","value","type","Outlet","FilmList","axios","KEY","fetchMain","response","abrupt","_callee2","_context2","_x","propTypes","PropTypes","fetchMovieDetails","_ref3","_callee3","_context3","_x2","fetchAboutMovie","_ref4","_callee4","about","_context4","_x3","_x4"],"sourceRoot":""}